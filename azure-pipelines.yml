trigger:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  TF_WORKING_DIRECTORY: 'terraform'
  AZURE_SUBSCRIPTION: 'Azure-DevOps-Connection'

stages:
  - stage: Checkout_Install
    displayName: Terraform_Install
    jobs:
      - job: TerraformInstall
        displayName: "Terraform_Install"
        steps:
          - task: Checkout@1
            displayName: "Checkout Code"
          - task: TerraformInstaller@2
            displayName: install terraform
            inputs:
              terraformVersion: "latest"

          - task: TerraformCLI@0
            displayName: "check terraform version"
            inputs:
              command: version

          - task: TerraformInstaller@0
            displayName: "Terraform Init"
            inputs:
              command: 'init'
              workingDirectory: $(TF_WORKING_DIRECTORY)
              backendServiceName: $(AZURE_SUBSCRIPTION)

          - task: TerraformCLI@0
            displayName: "Terraform Validate"
            inputs:
              command: 'validate'
              workingDirectory: $(TF_WORKING_DIRECTORY)              

  - stage:  Plan_Apply
    displayName: Terraform Plan and Apply
    jobs:
      - job: TerraformInstall
        displayName: "Terraform Install"
        steps:
          - task: TerraformCLI@0
            displayName: "Terraform Plan"
            inputs:
              command: 'plan'
              workingDirectory: $(TF_WORKING_DIRECTORY)
              additionalArgs: '-out=tfplan'

          - task: TerraformCLI@0
            displayName: "Terraform Apply"
            condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
            inputs:
              command: 'apply'
              workingDirectory: $(TF_WORKING_DIRECTORY)
              additionalArgs: '-auto-approve tfplan'