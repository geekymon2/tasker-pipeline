trigger:
  - main

pool:
  name: Local

variables:
  AZURE_SUBSCRIPTION: "Azure-DevOps-Connection"
  TF_STATE_STORAGEACCOUNT_RESOURCEGROUP_NAME: "GeekyMon2Storage"
  TF_STORAGE_ACCOUNT_NAME: "geekymon2storageaccount"
  TF_STORAGE_ACCOUNT_CONTAINER_NAME: "geekymon2-storage-container"
  TF_KEY: "terraform.tfstate"

stages:
  - stage: Terraform_Deployment
    displayName: Terraform_Install
    jobs:
      - job: Terraform
        displayName: "Terraform"
        steps:
          ### This is for Testing Only ####
          # - task: CmdLine@2
          #   inputs:
          #     script: |
          #       echo $(Build.SourcesDirectory)

          - task: TerraformInstaller@2
            displayName: install terraform
            inputs:
              terraformVersion: "latest"

          - task: TerraformCLI@0
            displayName: "check terraform version"
            inputs:
              command: version

          - task: TerraformCLI@0
            displayName: "Terraform Init"
            inputs:
              command: "init"
              backendType: "azurerm"
              workingDirectory: $(Build.SourcesDirectory)
              backendServiceArm: ${{ variables.AZURE_SUBSCRIPTION }}
              backendAzureRmResourceGroupName: ${{ variables.TF_STATE_STORAGEACCOUNT_RESOURCEGROUP_NAME }}
              backendAzureRmStorageAccountName: ${{ variables.TF_STORAGE_ACCOUNT_NAME }}
              backendAzureRmContainerName: ${{ variables.TF_STORAGE_ACCOUNT_CONTAINER_NAME }}
              backendAzureRmKey: ${{ variables.TF_KEY }}

          - task: TerraformCLI@0
            displayName: "Terraform Validate"
            inputs:
              command: "validate"
              backendType: "azurerm"
              workingDirectory: $(Build.SourcesDirectory)
              backendServiceArm: ${{ variables.AZURE_SUBSCRIPTION }}

          - task: TerraformCLI@0
            displayName: "Terraform Plan"
            inputs:
              command: "plan"
              backendType: "azurerm"
              workingDirectory: $(Build.SourcesDirectory)
              backendServiceArm: ${{ variables.AZURE_SUBSCRIPTION }}

          - task: TerraformCLI@0
            displayName: "Terraform Apply"
            inputs:
              command: "apply"
              backendType: "azurerm"
              workingDirectory: $(Build.SourcesDirectory)
              backendServiceArm: ${{ variables.AZURE_SUBSCRIPTION }}

      - job: Deploy
        displayName: "Deploy"
        dependsOn:
          - Terraform
        steps:
          - task: DownloadPackage@1
            displayName: "Download Artifact"
            inputs:
              packageType: "upack"
              feed: "tasker"
              definition: "Tasker"
              version: "latest"
              downloadPath: "$(System.DefaultWorkingDirectory)/artifact"
